version: '3.8'

services:
  meeting-agents:
    build: 
      context: ..  # Build from parent directory (project root)
      dockerfile: deployment/Dockerfile
    ports:
      - "5001:5000"
    environment:
      - FLASK_ENV=production
      - DEBUG=false
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials.json
    volumes:
      - ../credentials.json:/app/credentials.json:ro
      - ../logs:/app/logs
      - audio-uploads:/app/frontend/static/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for session storage and caching
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  # Optional: Database for persistent storage
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=meeting_agents
      - POSTGRES_USER=app_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-default_password}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  audio-uploads:
  redis-data:
  postgres-data:

networks:
  default:
    name: meeting-agents-network